{"version":3,"sources":["webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/flow-ui/flow-ui-components/src/ContactForm/ContactForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/flow-ui/flow-ui-widgets/src/ContactForm/ContactForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/flow-ui/flow-ui-widgets/src/ContactInfo/ContactInfo.jsx","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/flow-ui/flow-ui-widgets/src/Commitment/Commitment.jsx","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/blog/gatsby-blog-pages/src/pages/contact.jsx","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/flow-ui/flow-ui-components/src/PageTitle/PageTitle.jsx"],"names":["handleSubmit","submitting","success","onSubmit","method","action","demo","variant","htmlFor","type","id","name","required","placeholder","disabled","size","useForm","useSiteMetadata","phone","address","email","Section","aside","title","role","props","Seo","Divider","PageTitle","header","subheader","styles","count","fontSize","fontWeight","color","runninghead","mb","running","totalCount","as","sx"],"mappings":"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","file":"component---packages-blog-gatsby-blog-pages-src-pages-contact-jsx-c06e43cd3812e933e668.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Label, Input, Textarea, Button, Message, Spinner } from 'theme-ui'\r\n\r\n/**\r\n * How to enable form integration:\r\n *\r\n * 1) Shadow this component\r\n * 2) Remove the demo attribute from the form tag.\r\n * 3) Add your action end-point to the form tag.\r\n * 4) If required by your form API provider, add the hidden input(s).\r\n *\r\n * Some recommended serverless form providers:\r\n * Getform (https://www.gatsbyjs.com/docs/building-a-contact-form/#getform)\r\n * Formspree (https://www.gatsbyjs.com/docs/building-a-contact-form/#formspree)\r\n * Netlify Form (https://www.gatsbyjs.com/docs/building-a-contact-form/#netlify)\r\n *\r\n */\r\n\r\nconst ContactForm = ({ handleSubmit, submitting, success }) => (\r\n  <form\r\n    onSubmit={handleSubmit}\r\n    method='POST'\r\n    action='YOUR_ACTION_END_POINT'\r\n    demo='demo'\r\n  >\r\n    {success === true && (\r\n      <Message variant='success'>\r\n        Thank you for contacting us. We'll get back to you soon!\r\n      </Message>\r\n    )}\r\n    {success === false && (\r\n      <Message variant='error'>\r\n        Something went wrong. Please try again later!\r\n      </Message>\r\n    )}\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-name'>Name</Label>\r\n        <Input type='text' id='contact-form-name' name='name' required />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-company'>Company Name</Label>\r\n        <Input type='text' id='contact-form-company' name='company' />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-email'>Email</Label>\r\n        <Input\r\n          type='email'\r\n          placeholder='email@example.com'\r\n          id='contact-form-email'\r\n          name='email'\r\n          required\r\n        />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-phone'>Phone Number</Label>\r\n        <Input\r\n          type='tel'\r\n          placeholder='(xxx) xxx-xxxx'\r\n          id='contact-form-phone'\r\n          name='phone'\r\n        />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-subject'>Subject</Label>\r\n      <Input type='text' id='contact-form-subject' name='subject' required />\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-message'>Your Message</Label>\r\n      <Textarea name='message' id='contact-form-message' />\r\n    </Box>\r\n    <Button\r\n      variant={success || submitting ? 'disabled' : 'primary'}\r\n      disabled={success || submitting}\r\n      type='submit'\r\n      required\r\n    >\r\n      Submit {submitting && <Spinner size='20' />}\r\n    </Button>\r\n  </form>\r\n)\r\n\r\nexport default ContactForm\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  submitting: PropTypes.bool,\r\n  success: PropTypes.bool\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'theme-ui'\r\nimport ContactFormComponent from '@components/ContactForm'\r\nimport useForm from '@helpers/useForm'\r\n\r\nconst ContactForm = () => {\r\n  const { handleSubmit, submitting, success } = useForm()\r\n\r\n  return (\r\n    <Card variant='paper'>\r\n      <ContactFormComponent {...{ handleSubmit, submitting, success }} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport { Card, Text, IconButton } from 'theme-ui'\r\nimport { FaPhone, FaEnvelope, FaLocationArrow } from 'react-icons/fa'\r\nimport Section from '@components/Section'\r\nimport useSiteMetadata from '@helpers-blog/useSiteMetadata'\r\n\r\nconst ContactInfo = () => {\r\n  const { phone, address, email } = useSiteMetadata()\r\n\r\n  return (\r\n    <Section aside title='Advertise With Us'>\r\n      <Card variant='paper'>\r\n        <Text variant='p'>Interested in working together?</Text>\r\n        <Text variant='p'>\r\n          Suspendisse potenti. Mauris mollis diam tempus ut.\r\n        </Text>\r\n        {phone && (\r\n          <Text>\r\n            <IconButton variant='simple' role='presentation'>\r\n              <FaPhone />\r\n            </IconButton>\r\n            {phone}\r\n          </Text>\r\n        )}\r\n        {email && (\r\n          <Text>\r\n            <IconButton variant='simple' role='presentation'>\r\n              <FaEnvelope />\r\n            </IconButton>\r\n            {email}\r\n          </Text>\r\n        )}\r\n        {address && (\r\n          <Text>\r\n            <IconButton variant='simple' role='presentation'>\r\n              <FaLocationArrow />\r\n            </IconButton>\r\n            {address}\r\n          </Text>\r\n        )}\r\n      </Card>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default ContactInfo\r\n","import React from 'react'\r\nimport { Card, Text } from 'theme-ui'\r\nimport Section from '@components/Section'\r\n\r\nconst Commitment = props => (\r\n  <Section aside title='Our Commitment' {...props}>\r\n    <Card variant='paper'>\r\n      <Text variant='p'>\r\n        We take our commitment to our users seriously. If you need our help with\r\n        your project, have questions about how to use the site or are\r\n        experiencing any technical difficulties, please do not hesitate to\r\n        contact us.\r\n      </Text>\r\n    </Card>\r\n  </Section>\r\n)\r\n\r\nexport default Commitment\r\n","import React from 'react'\r\nimport { Layout, Stack, Main, Sidebar } from '@layout'\r\nimport PageTitle from '@components/PageTitle'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport ContactForm from '@widgets/ContactForm'\r\nimport ContactInfo from '@widgets/ContactInfo'\r\nimport Commitment from '@widgets/Commitment'\r\n\r\nconst PageContact = props => (\r\n  <Layout {...props}>\r\n    <Seo title='Contact' />\r\n    <Divider />\r\n    <Stack>\r\n      <Main>\r\n        <PageTitle\r\n          header=\"Let's Connect\"\r\n          subheader='FlexiBlog theme comes with a pre-made contact form component.\r\n\t\t\t\t\tYou can integrate this form with serverless services such as Formspree, Getform,\r\n\t\t\t\t\tFormKeep and others to receive form submissions via email.'\r\n        />\r\n        <Divider />\r\n        <ContactForm />\r\n      </Main>\r\n      <Sidebar>\r\n        <Commitment />\r\n        <Divider />\r\n        <ContactInfo />\r\n      </Sidebar>\r\n    </Stack>\r\n  </Layout>\r\n)\r\n\r\nexport default PageContact\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Heading, Text, Badge } from 'theme-ui'\r\n\r\nconst styles = {\r\n  count: {\r\n    fontSize: 4\r\n  },\r\n  subheader: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`\r\n  },\r\n  runninghead: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`,\r\n    mb: 0\r\n  }\r\n}\r\n\r\nconst PageTitle = ({ header, subheader, running, totalCount }) => {\r\n  return (\r\n    <div>\r\n      <Heading variant='h1' as='h1'>\r\n        {header}{' '}\r\n        {totalCount && (\r\n          <Badge variant='tag-white' sx={styles.count}>\r\n            {' '}\r\n            {totalCount}\r\n          </Badge>\r\n        )}\r\n      </Heading>\r\n      {subheader && (\r\n        <Text variant='h3' sx={styles.subheader}>\r\n          {subheader}\r\n        </Text>\r\n      )}\r\n      {running && (\r\n        <Text variant='h4' sx={styles.runninghead}>\r\n          {running}\r\n        </Text>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  running: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  totalCount: PropTypes.number\r\n}\r\n"],"sourceRoot":""}